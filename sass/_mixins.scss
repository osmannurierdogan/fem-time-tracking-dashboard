@mixin responsive($breakpoint) {
  @if $breakpoint == phone {
    @media (max-width: 24em) {
      // 384px
      @content;
    }
  }
  @if $breakpoint == tab-port {
    @media (max-width: 56.25em) {
      // 900px
      @content;
    }
  }
  @if $breakpoint == tab-land {
    @media (max-width: 75em) {
      // 1200px
      @content;
    }
  }
  @if $breakpoint == desktop {
    @media (max-width: 90em) {
      // 1440px
      @content;
    }
  }
  @if $breakpoint == big-desktop {
    @media (min-width: 112.5em) {
      // 1800px
      @content;
    }
  }
}

@mixin grid() {
  & {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(30rem, max-content));
    grid-gap: 3.2rem;
    // grid-template-rows: repeat($row, 1fr);
    &__item {
      &--1 {
      }
    }
  }
}
/*.grid {
  display: grid;
  grid-template-rows: repeat(4, 1fr);
  grid-template-columns: repeat(auto-fit, minmax(30rem, max-content));
  gap: 2.4rem;
  @include responsive(phone) {
    grid-template-columns: repeat(1, 1fr);
    grid-template-rows: repeat(4, 1fr);
  }

  &__item {
    &--1 {
      grid-column: 1 / 2;
      grid-row: 2 / 4;
      border-top: 0.5rem solid $color-primary-cyan;
      @include responsive(phone) {
        grid-row: 1 / span 1;
        grid-column: 1 / 2;
      }
    }
    &--2 {
      grid-column: 2 / 3;
      grid-row: 1 / 3;
      border-top: 0.5rem solid $color-primary-red;
      @include responsive(phone) {
        grid-row: 2 / span 1;
        grid-column: 1 / 2;
      }
    }
    &--3 {
      grid-column: 2 / 3;
      grid-row: 3 / 5;
      border-top: 0.5rem solid $color-primary-orange;
      @include responsive(phone) {
        grid-row: 3 / span 1;
        grid-column: 1 / 2;
      }
    }
    &--4 {
      grid-column: 3 / 4;
      grid-row: 2 / 4;
      border-top: 0.5rem solid $color-primary-blue;
      @include responsive(phone) {
        grid-row: 4 / span 1;
        grid-column: 1 / 2;
      }
    }
  }
}
*/
